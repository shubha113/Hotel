// src/pages/Home.jsx
import React, { useEffect, useState, useCallback, useRef } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { getAllRooms, clearError } from '../redux/slices/roomSlice';
import RoomList from '../components/rooms/RoomList';
import RoomFilter from '../components/rooms/RoomFilter';
import Loader from '../components/common/Loader';

const Home = () => {
Â  const dispatch = useDispatch();
Â  const { rooms, loading, error, totalCount } = useSelector((state) => state.rooms);
Â  
Â  // ðŸ”‘ The fix: Initialize with the full filter object structure
Â  const [filters, setFilters] = useState({
Â  Â  type: '',
Â  Â  minPrice: '',
Â  Â  maxPrice: '',
Â  Â  checkIn: '',
Â  Â  checkOut: '',
Â  });
Â  
Â  const timeoutRef = useRef(null);

Â  const debouncedDispatch = useCallback((newFilters) => {
Â  Â  if (timeoutRef.current) {
Â  Â  Â  clearTimeout(timeoutRef.current);
Â  Â  }
Â  Â  
Â  Â  timeoutRef.current = setTimeout(() => {
Â  Â  Â  dispatch(getAllRooms(newFilters));
Â  Â  }, 500);
Â  }, [dispatch]);

Â  useEffect(() => {
Â  Â  debouncedDispatch(filters);

Â  Â  return () => {
Â  Â  Â  if (timeoutRef.current) {
Â  Â  Â  Â  clearTimeout(timeoutRef.current);
Â  Â  Â  }
Â  Â  Â  dispatch(clearError());
Â  Â  };
Â  }, [debouncedDispatch, filters]);

Â  const handleFilterChange = (newFilters) => {
Â  Â  setFilters(newFilters);
Â  };

Â  if (loading) {
Â  Â  return <Loader text="Loading rooms..." />;
Â  }

Â  return (
Â  Â  <div className="home-page">
Â  Â  Â  <div className="container">
Â  Â  Â  Â  <section className="hero">
Â  Â  Â  Â  Â  <div className="hero-content">
Â  Â  Â  Â  Â  Â  <h1>Find Your Perfect Stay</h1>
Â  Â  Â  Â  Â  Â  <p>Discover comfortable rooms at unbeatable prices</p>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </section>

Â  Â  Â  Â  <section className="filter-section">
Â  Â  Â  Â  Â  <RoomFilter filters={filters} onFilterChange={handleFilterChange} />
Â  Â  Â  Â  </section>

Â  Â  Â  Â  {error && (
Â  Â  Â  Â  Â  <div className="error-message">
Â  Â  Â  Â  Â  Â  <p>Error: {error}</p>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  )}

Â  Â  Â  Â  <section className="rooms-section">
Â  Â  Â  Â  Â  <div className="section-header">
Â  Â  Â  Â  Â  Â  <h2>Available Rooms</h2>
Â  Â  Â  Â  Â  Â  <span className="room-count">
Â  Â  Â  Â  Â  Â  Â  {totalCount} room{totalCount !== 1 ? 's' : ''} found
Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  {rooms.length > 0 ? (
Â  Â  Â  Â  Â  Â  <RoomList rooms={rooms} />
Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  <div className="no-rooms">
Â  Â  Â  Â  Â  Â  Â  <h3>No rooms found</h3>
Â  Â  Â  Â  Â  Â  Â  <p>Try adjusting your search filters</p>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  </section>
Â  Â  Â  </div>
Â  Â  </div>
Â  );
};

export default Home;